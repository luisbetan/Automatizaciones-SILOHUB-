import threading
from selenium import webdriver
from selenium.webdriver.common.by import By
import time

def login(username, password):
    driver = webdriver.Chrome(executable_path="C:\driverchrome\chromedriver-win64\chromedriver.exe")  # Configura el driver de Selenium (en este caso, Chrome)
    driver.get("https://pwa-portal-staging.silohub.ag/login")  # Abre la página de inicio de sesión
    driver.implicitly_wait(30)
    driver.maximize_window()
    # Encuentra los campos de usuario y contraseña y envía los datos
    driver.find_element(By.ID, "email").send_keys("luis@silohub.ag")
    driver.find_element(By.ID, "password").send_keys("Bet$714656")

    # Envía el formulario de inicio de sesión
    driver.find_element(By.XPATH, '/html/body/app-root/app-login-main/div/div[2]/div/app-login-form/div/div/div[1]/div/div[2]/form/div[4]/app-button').click()
    time.sleep(3)
    # Agrega cualquier otra acción después del inicio de sesión si es necesario

    driver.find_element_by_xpath("/html/body/app-root/app-layout/app-vertical/div/div/div/div/app-home-main/div/div[1]/app-tenant-main/app-tenant[8]/div/div/img").click()
    time.sleep(3)

    ## seleccionar menu y submenu 

    account_clien = driver.find_element_by_css_selector("#navbar-nav > li:nth-child(3) > a > span")
    account_clien.click()
    time.sleep(2)
    
    driver.find_element_by_xpath("/html/body/app-root/app-layout/app-vertical/div/app-sidebar/div[1]/div[2]/div[1]/ngx-simplebar/div[1]/div[2]/div/div/div/ul/li[3]/div/ul/li[1]/a").click()
    time.sleep(2)
    ## validar menu ingresado 

    title_menu = driver.find_element_by_xpath("/html/body/app-root/app-layout/app-vertical/div/div/div/app-header-for-screen/div/div/span")
    title_menu_obtained = title_menu.text
    title_menu_expected = "MIS CONTRATOS"

    if title_menu_obtained == title_menu_expected:
        print("El ingreso fue exitoso", title_menu_obtained)

    else:
        print("No fue exitoso el ingreso al menú")

    # Cierra el navegador
    driver.quit()
   
def prueba_estres_login(username, password, num_browsers):
    threads = []

    for _ in range(num_browsers):
        t = threading.Thread(target=login, args=(username, password))
        threads.append(t)
        t.start()

    # Espera a que todos los hilos (threads) hayan terminado
    for t in threads:
        t.join()

    print("Prueba de estrés finalizada.")

# Llama a la función prueba_estres_login con los parámetros deseados
prueba_estres_login("luis@silohub.ag", "Bet$714656", 10)  # Abre y cierra 10 navegadores al mismo tiempo